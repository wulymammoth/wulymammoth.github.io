<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wulymammoth</title>
    <link>https://wulymammoth.github.io/</link>
    <description>Recent content on wulymammoth</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 25 May 2020 08:07:47 -0700</lastBuildDate>
    
	<atom:link href="https://wulymammoth.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why I Love Elixir (Erlang)</title>
      <link>https://wulymammoth.github.io/posts/why_i_love_elixir/</link>
      <pubDate>Mon, 25 May 2020 08:07:47 -0700</pubDate>
      
      <guid>https://wulymammoth.github.io/posts/why_i_love_elixir/</guid>
      <description>TL;DR   The screenshot is from the following talk by SaÅ¡a JuriÄ‡, the author of Elixir in Action, being the first book that I had ever read on the language when I began. If I could get you to take anything away from this post, it&amp;rsquo;d be the entirety of this video. Watch it! You won&amp;rsquo;t be disappointed as it delivers like no other talk you&amp;rsquo;ve seen &amp;ndash; &amp;ldquo;brutally&amp;rdquo; to the point giving you an idea about what it is like running real systems in production that the BEAM (Erlang VM) provides and that no other platform provides out of the box; not Haskell, not Scala, not Clojure, not OCaml.</description>
    </item>
    
    <item>
      <title>Violating the Law of Demeter</title>
      <link>https://wulymammoth.github.io/posts/law-of-demeter/</link>
      <pubDate>Sat, 23 May 2020 09:44:59 -0700</pubDate>
      
      <guid>https://wulymammoth.github.io/posts/law-of-demeter/</guid>
      <description>A co-worker linked to the following article describing some of JavaScript&amp;rsquo;s new features in 2020 this past week: https://www.freecodecamp.org/news/javascript-new-features-es2020/. One of the features that stood out was optional chaining.
This brings with it something that I&amp;rsquo;ve already seen in other languages that I work with, namely Ruby, and its #try or &amp;amp;. (safe navigation operator). This sort of convenience feature is a double-edged sword:
 good for scripting not so good for any software that is to be extended and or maintained  1.</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://wulymammoth.github.io/posts/my-first-post/</link>
      <pubDate>Sat, 23 May 2020 09:14:51 -0700</pubDate>
      
      <guid>https://wulymammoth.github.io/posts/my-first-post/</guid>
      <description>Bringing back my blog, particularly for technical musings, but also as a semi-infrequently updated journal
$ cat friends.txt | awk &amp;#39;{ print &amp;#34;ðŸ‘‹ &amp;#34; %1 &amp;#34;!&amp;#34; }&amp;#39; </description>
    </item>
    
  </channel>
</rss>